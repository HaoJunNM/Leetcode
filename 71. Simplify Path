"""
my answer is wrong
"""
class Solution(object):
    def simplifyPath(self, path):
        """
        :type path: str
        :rtype: str
        """
        a = '/'
        i = 0    
        while i < len(path)-1: #the last one is not in the loop
            if i == 1 and path[i] == '/':
                i+=1
                continue
            if path[i] == path[i+1]:
                if path[i] == '.':
                    if a[-1] == '/' and len(a) > 2:
                        a = a[:-2]
                        i+=2
                    elif len(a) == 2:
                        a = a[:-1]
                        i+=2
                    else:
                        i+=2
                        continue
                elif path[i] == '/':
                    a = a+path[i]
                    i+=2
                    continue
                else:
                    a = a+path[i]
                    i+=1
            elif path[i] == '.':
                i+=1
                continue
            elif path[i] == '/':
                if a[-1] == '/':
                    i+=1
                else:
                    a = a+path[i]
                    i+=1
            else:
                a = a+path[i]
                i += 1
        if path[-1] != '/' or path[-1] != '.':
            a = a+path[-1]
        while a[-1] == '/' and len(a)>1:
            a=a[:-1]
        else:
            return a
                
            
"""
right answer
"""
class Solution:
    def simplifyPath(self, path):
        """ Time complexity: O(n). Space complexity: O(n), n is len(path).
        """
        pwd = []  # stack, present working directory
        path = path.split("/")
        for curr in path:
            if not curr or curr == ".":  # skip current dir
                continue
            elif curr == "..":
                if pwd:  # if we're not in the root directory, go back
                    pwd.pop()
            else:
                pwd.append(curr)
        return "/" + "/".join(pwd)
